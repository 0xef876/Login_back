
name: build/CI/CD

on:
  # main 브런치가 push 했을때
  push:
    branches: [ main ] 
  # 이부분은 위의 trigger가 없어도 수동으로 동작 할 수 있게끔 해주는 역할
  workflow_dispatch:

# 해야 될 일 정의
jobs:
  # job 이름 정의
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    # .NET 버전 설정
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 2.2.x

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  
  # job 이름 정의
  CI_CD:
    runs-on: ubuntu-latest
    
    needs: build 
    
    steps:
    - name: checkout release
      uses: actions/checkout@v3
    
    # Login_back 를 tar로 압축
    - name: archive Login_back
      run: |
        tar cvfz Login_back.tar.gz *
    
    # AWS 인증 
    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-northeast-2 
    
    # AWS S3 버킷에 tar 업로드
    - name: upload to S3
      run: aws s3 cp --region ap-northeast-2 ./Login_back.tar.gz s3://code-deploy-fins/archive/back
    
    # AWS CodeDeploy 를 이용하여 tar압축을 풀어서 배포
    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name S3-code-deploy
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name github-action-test
        --s3-location bucket=code-deploy-fins,bundleType=tgz,key=archive/back/Login_back.tar.gz
