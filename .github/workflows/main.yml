# This is a basic workflow to help you get started with Actions

name: build/CI/CD

# Controls when the workflow will run
on:
  # 지정한 branch에서 push/pull_request 에 해당하는 command가 수행되면 이 workflow가 동작 합니다. 
  # 여기서는 간단히 main 브런치에서 push되면서 이 workflow가 실행 되도록 하겠습니다.
  push:
    branches: [ main ] 
 
  # 이부분은 위의 trigger가 없어도 수동으로 동작 할 수 있게끔 해주는 역할을 합니다.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build" 
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 2.2.x

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  CI:
    runs-on: ubuntu-latest
    
    needs: build 
    
    steps:
    - name: checkout release
      uses: actions/checkout@v3

    - name: archive Login_back
      run: |
        tar cvfz Login_back.tar.gz *
       
  CD:
    runs-on: ubuntu-latest
    
    needs: CI
    
    steps:
    
    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-northeast-2 
    
    - name: upload to S3
      run: aws s3 cp --region ap-northeast-2 ./Login_back.tar.gz s3://code-deploy-fins/archive/
      
    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name S3-code-deploy
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name github-action-test
        --s3-location bucket=code-deploy-fins,bundleType=tgz,key=archive/Login_back.tar.gz
